name: Deploy Discord Bot

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */5 * * *"  # Every 5 hours
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # Ensure this matches your bot's requirements

    # Step 3: Update package lists (necessary for installing packages)
    - name: Update package lists
      run: sudo apt-get update

    # Step 4: Install ffmpeg if necessary
    - name: Install ffmpeg (optional)
      run: sudo apt-get install -y ffmpeg --fix-missing
      if: ${{ secrets.INSTALL_FFMPEG == 'true' }}  # Condition to install if needed

    # Step 5: Cache dependencies
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 6: Install Python dependencies with error handling
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || echo "Dependency installation failed"
      continue-on-error: true  # Allows workflow to proceed for debugging

    # Step 7: Run the bot in background
    - name: Run bot
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      run: |
        nohup python main.py &  # Run in background
        sleep 30  # Keep the process alive briefly to ensure startup
      continue-on-error: true  # Continue if the bot doesn't start, for debugging

    # Optional: Notify on failure
    - name: Notify on failure
      if: failure()
      run: echo "Bot deployment failed. Please check the logs."
