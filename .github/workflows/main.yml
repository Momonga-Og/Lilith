name: Deploy Discord Bot

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */5 * * *"  # Every 5 hours
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy-bot:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Ensure this matches your bot's requirements

    # Step 3: Cache dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 4: Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}  # Ensure access during installs

    # Step 5: Install ffmpeg (if needed)
    - name: Install ffmpeg
      run: sudo apt-get update && sudo apt-get install -y ffmpeg
      if: ${{ secrets.INSTALL_FFMPEG == 'true' }}  # Install only if required

    # Step 6: Run the bot
    - name: Run the bot
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      run: |
        nohup python main.py > bot_output.log 2>&1 &
        sleep 10  # Ensure startup stability
      continue-on-error: false  # Fail if the bot doesn't start

    # Step 7: Notify on failure (optional)
    - name: Notify on failure
      if: failure()
      run: echo "Bot deployment failed. Please check the logs."
